<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:yin="urn:ietf:params:xml:schema:yang:yin:1"
           targetNamespace="http://myTest.com/ns/yang/myTest-test-myVer-parser-cfg"
           xmlns="http://myTest.com/ns/yang/myTest-test-myVer-parser-cfg"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="2013-07-22"
           xml:lang="en"
          xmlns:myVer="http://myTest.com/ns/yang/myTest-myVer-types"
          xmlns:parser-cfg="http://myTest.com/ns/yang/myTest-test-myVer-parser-cfg">

  <xs:import namespace="http://myTest.com/ns/yang/myTest-myVer-types"
             schemaLocation="myTest-test-myVer-types.xsd"/>

  <xs:annotation>
    <xs:documentation>
      This schema was generated from the YANG module myTest-test-myVer-parser-cfg

      The schema describes an instance document consisting
      of the entire configuration data store, operational
      data, rpc operations, and notifications.
      This schema can thus NOT be used as-is to
      validate NETCONF PDUs.
    </xs:documentation>
  </xs:annotation>

  <xs:annotation>
    <xs:documentation>
      This module contains a collection of YANG definitions
      for myTest test-myVer parser package configuration.

      This module contains definitions
      for the following management objects:
        parser: Parser configuration

       myTest .
      All rights reserved.
    </xs:documentation>
  </xs:annotation>

  <xs:element name="parser">
    <xs:annotation>
      <xs:documentation>
        Parser configuration
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="alias" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              Alias for command mapping
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="commands" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>
                    Table of all aliases configured
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="command" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>
                          Alias name to command mapping
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="alias-name"  type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                Alias Name
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="command" minOccurs="0"  type="myVer:myTest-test-myVer-string">
                            <xs:annotation>
                              <xs:documentation>
                                The actual command
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:any minOccurs="0" maxOccurs="unbounded"
                                  namespace="##other" processContents="lax"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:any minOccurs="0" maxOccurs="unbounded"
                            namespace="##other" processContents="lax"/>
                  </xs:sequence>
                </xs:complexType>
                <xs:key name="key_commands_alias_parser_command">
                  <xs:selector xpath="parser-cfg:command"/>
                  <xs:field xpath="parser-cfg:alias-name"/>
                </xs:key>
              </xs:element>
              <xs:any minOccurs="0" maxOccurs="unbounded"
                      namespace="##other" processContents="lax"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any minOccurs="0" maxOccurs="unbounded"
                namespace="##other" processContents="lax"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
