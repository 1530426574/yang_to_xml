<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:yin="urn:ietf:params:xml:schema:yang:yin:1"
           targetNamespace="http://myTest.com/ns/yang/myTest-myVer-types"
           xmlns="http://myTest.com/ns/yang/myTest-myVer-types"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="2013-07-22"
           xml:lang="en"
          xmlns:myVer="http://myTest.com/ns/yang/myTest-myVer-types">

  <xs:annotation>
    <xs:documentation>
      This schema was generated from the YANG module myTest-test-myVer-types

      The schema describes an instance document consisting
      of the entire configuration data store, operational
      data, rpc operations, and notifications.
      This schema can thus NOT be used as-is to
      validate NETCONF PDUs.
    </xs:documentation>
  </xs:annotation>

  <xs:annotation>
    <xs:documentation>
      This module contains a collection of test-myVer derived YANG data 
      types.
          
       myTest .
      All rights reserved.
    </xs:documentation>
  </xs:annotation>

  <!-- YANG typedefs -->
  <xs:simpleType name="Route-dist">
    <xs:annotation>
      <xs:documentation>
        Route distinguisher in hexadecimal notation.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{8}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-l2vpn-evpn-addrs">
    <xs:annotation>
      <xs:documentation>
        L2VPN EVPN Address in hexadecimal notation.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{29}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-ls-addr">
    <xs:annotation>
      <xs:documentation>
        BGP link state unicast address in hexadecimal
        notation.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{1000}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-ipv6-mvpn-addr">
    <xs:annotation>
      <xs:documentation>
        An IPV6 MVPN address in decimal notation.
        An IPv6 MVPN address should be of the form 
        [x:x:x:x].
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(([0-9]{10}):([0-9]{5}):(((([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))|([0-9]{10})):([0-9]{10}))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-ipv4-mvpn-addr">
    <xs:annotation>
      <xs:documentation>
        An IPV4 MVPN address in decimal notation.
        An IPv4 MVPN address should be of the form
        [x:x:x:x].
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(([0-9]{10}):([0-9]{5}):(((([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))|([0-9]{10})):([0-9]{10}))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-rt-constrt-addr">
    <xs:annotation>
      <xs:documentation>
        An IPV4 RTConstraint address in decimal notation.
        An IPv4 RT Constraint address should be of the form 
        a:b:c:d or x:y:a.b.c.d:z
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(([0-9]{10}):([0-9]{5}):(((([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))|([0-9]{10})):([0-9]{10}))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-ipv4-mdt-addr">
    <xs:annotation>
      <xs:documentation>
        An IPV4 MDT address in dotted decimal notation.
        An IPv4 MDT address should be of the form 
        0000006400000065-129.29.83.45. This datatype 
        restricts the value of each field 16 digits in 
        hexadecimal for RD field and between 0 and 255
        for IPv4 address field, i.e. 
        [0000000000000000-ffffffffffffffff]-
        [0-255].[0-255].[0-255].[0-255].
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(([a-f0-9]{16}-)(([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Bgp-ipv4-tunnel-addr">
    <xs:annotation>
      <xs:documentation>
        An IPV4 tunnel address in dotted decimal notation.
        An IPv4 tunnel address should be of the form 
        65535:129.29.83.45. This datatype restricts the 
        value of each field between 0 and 65535 for prefix
        field and 0 and 255 for IPv4 address field, i.e.
        [0-65535]:[0-255].[0-255].[0-255].[0-255]
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="((0:|[1-9][0-9]{0,4}:)(([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="myTest-test-myVer-port-number">
    <xs:annotation>
      <xs:documentation>
        Port number of range from 1 to 65535
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:unsignedShort">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="65535"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Interface-name">
    <xs:annotation>
      <xs:documentation>
        An interface name specifying an interface type and 
        instance.
        Interface represents a string defining an interface
        type and instance, e.g. MgmtEth0/4/CPU1/0
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(\w*\d+/){3}\d+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="myTest-test-myVer-string">
    <xs:annotation>
      <xs:documentation>
        Special characters are not allowed.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[\w\-]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Ipv4-prefix-length">
    <xs:annotation>
      <xs:documentation>
        An IPv4 address prefix length. 
        Must lie between 0 and 32 inclusive.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:unsignedByte">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Ipv6-prefix-length">
    <xs:annotation>
      <xs:documentation>
        An IPv6 address prefix length. 
        Must lie between 0 and 32 inclusive.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:unsignedByte">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="128"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Rack-id">
    <xs:annotation>
      <xs:documentation>
        Names the rack portion of a NodeID 
        Rack/Slot/Instance triple
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="\w*\d+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Slot-id">
    <xs:annotation>
      <xs:documentation>
        Names the slot portion of a NodeID 
        Rack/Slot/Instance triple
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="\w*\d+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Instance-id">
    <xs:annotation>
      <xs:documentation>
        Names the instance portion of a NodeID 
        Rack/Slot/Instance triple
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="\w*\d+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Sub-instance-id">
    <xs:annotation>
      <xs:documentation>
        Names the sub-instance portion of an extended
        NodeID Rack/Slot/Instance/SubInstance
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="\w*\d+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Encryption-type">
    <xs:annotation>
      <xs:documentation>
        The type of encryption used on a password string.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="md5"/>
      <xs:enumeration value="proprietary"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Hex-integer">
    <xs:annotation>
      <xs:documentation>
        An unsigned 32-bit integer represented in
        hexadecimal format.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[0-9a-fA-F]{1,8}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Osi-system-id">
    <xs:annotation>
      <xs:documentation>
        An OSI system ID should be of the form 
        0123.4567.89ab. This data type restricts each
        character to a hex character.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{4}(\.[a-fA-F0-9]{4}){2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Osi-area-address">
    <xs:annotation>
      <xs:documentation>
        An OSI area address should consist of an odd number
        of octets, and be of the form 01 or 01.2345 etc up
        to 01.2345.6789.abcd.ef01.2345.6789. This data type
        restricts each character to a hex character.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{2}(\.[a-fA-F0-9]{4}){0,6}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Isis-node-id">
    <xs:annotation>
      <xs:documentation>
        An ISIS node ID should be of the form 
        0123.4567.89ab.cd. This data type restricts each
        character to a hex character.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{4}(\.[a-fA-F0-9]{4}){2}\.[a-fA-F0-9]{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Isis-lsp-id">
    <xs:annotation>
      <xs:documentation>
        An ISIS LSP ID should be of the form 
        0123.4567.89ab.cd-ef. This data type restricts each
        character to a hex character.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{4}(\.[a-fA-F0-9]{4}){2}\.[a-fA-F0-9]{2}\-[a-fA-F0-9]{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Osi-net">
    <xs:annotation>
      <xs:documentation>
        An OSI NET should consist of an even number of 
        octets, and be of the form 01.2345.6789.abcd.ef etc
        up to 
        01.2345.6789.abcd.ef01.2345.6789.abcd.ef01.2345.67.
        This data type restricts each character to a hex
        character.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-fA-F0-9]{2}(\.[a-fA-F0-9]{4}){3,9}\.[a-fA-F0-9]{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="String-identifier">
    <xs:annotation>
      <xs:documentation>
        A string for specifying identifier.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="[a-zA-Z][\w\-]*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Char-num">
    <xs:annotation>
      <xs:documentation>
        Takes a character or its ASCII decimal equivalent
        (0-255).
      </xs:documentation>
    </xs:annotation>

    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
        <xs:pattern value="."/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:unsignedByte">
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="Tty-escape-char-num">
    <xs:annotation>
      <xs:documentation>
        Escape character or its ASCII decimal equivalent
        (0-255) or one of the three string DEFAULT, BREAK,
        NONE.
      </xs:documentation>
    </xs:annotation>

    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
        <xs:pattern value=".|(DEFAULT)|(BREAK)|(NONE)"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:unsignedByte">
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="Extended-node-id">
    <xs:annotation>
      <xs:documentation>
        A location used as value information and specified
        as a Rack/Slot/Instance/SubInstance, e.g. 
        0/1/CPU0/NPU0
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(\w*\d+/){3}(\w*\d+)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Node-id">
    <xs:annotation>
      <xs:documentation>
        A location used as value information and specified
        as a Rack/Slot/Instance triple, e.g. F0/SC1/0.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(\w*\d+/){2}(\w*\d+)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Pq-node-id">
    <xs:annotation>
      <xs:documentation>
        Partially qualified location which is used for 
        wildcarding location specifications, e.g. 1/*/*
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    <xs:pattern value="(((\w*\d+)|(\*))/){2}((\w*\d+)|(\*))"/>
    </xs:restriction>
  </xs:simpleType>


</xs:schema>
